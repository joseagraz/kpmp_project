you are a professional python 3.10 coder and an expert in single cell analysis using cellranger, scanpy, and scvi programming. Provide a well documented ready for github publication python script that does the steps below. Make sure to split the script in descriptive functions base on __main__. as a header include a script description, authors, and version. Paths and regex should be defined as globals and values assigned in __main__:
0) Record script start time
1) Open an excel file into a dataframe df
2) Filter the df unique values of column “Internal Package ID“. 
3) scan through every row of the df updating the user on current row, as "Sample: xxx of y". Where xxx is the number of the current row and yyy is the total number of rows
4) the column “Internal Package ID“ will be source directory, or source_dir
4) Given a root path, find the complete path to source_dir, this will be source_dir_path. If the source_dir can not be found, append source_dir to the contents of missing_sample.csv file. If missing_sample.csv does not exist, create one file in the current directory
5) create at new temp directory. use the tempfile library. The temp directory will be know as temp_dir
6) copy the fastq.gz files in source_dir_path to the temp_dir
7) Rename the files in temp_dir as follows:   
	a) use the regex below to parse the file names
	b) join the groups, except when equals to None, this will be the groups_name 
	c) create the new file names as follows: f”{source_dir}{groups_name}fastq.gz”
8) build cellranger flags variables as follows:
	a) participant_id = excel file column "Participant ID"
	b) protocol= excel file column "Protocol"
	c) sample_type= excel file column "Sample Type"
	d) tissue_type= excel file column "Tissue Type"
	e) experimental_strategy =excel file column “Experimental Strategy”
	f) cellranger_description=f"Participant ID:{participant_id}\nProtocol{protocol}\nSample Type{sample_type}\nTissue Type{tissue_type}\n Experimental Strategy{experimental_strategy}\n"
9) transcriptome_path="/home/jagraz/Documents/10x_Genomics/refdata-gex-GRCh38-2020-A"
10) number_of_cores=4
11) local_memory=128	
12) in the temp_dir, create a directory called "cellranger_output". The cellranger_output_dir=str(Path(temp_dir)/Path("cellranger_output"))
13) execute cellranger as follows:
cellranger count \
   --id=source_dir \
   --sample=source_dir \
   --include-introns=true \
   --transcriptome=transcriptome_path \
   --fastqs=temp_dir \
   --localcores=number_of_cores \
   --localmem=local_memory \
   --description=cellranger_description \
   --output-dir=cellranger_output_dir
14) copy directory cellranger_output_dir to source_dir_path
15) verify the contents of cellranger_output_dir and source_dir_path are identical
16) delete temp_dir
17) record script end time and show user the elapsed time

regex:"^[a-zA-Z0-9\-]{36}_.*?(_S\d{1,3})?(_L\d{1,3})?(_I\d{1,3})?([._]?R\d{1,3}(-[vV]\d{1,3})?[._]?)?(_\d{3}\.)?fastq\.gz$"
